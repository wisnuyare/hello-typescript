{"ast":null,"code":"var _jsxFileName = \"/srv/www/latihan/hello-typescript/src/component/product/productList.tsx\";\nimport React, { Component } from \"react\";\nimport fetchProductList from \"../../api_calls/productList\";\nexport default class ProductList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: 1,\n      perPage: 4,\n      totalProducts: 0,\n      productList: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      let result = await fetchProductList(this.state.page, this.state.perPage);\n      let resultJSON = await result.json();\n\n      if (result.ok) {\n        this.setState({\n          productList: resultJSON.products,\n          totalProducts: resultJSON.paging.total\n        });\n      } else {// Handle your error here\n      }\n    } catch (err) {// Handle your error here\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.productList.map((product, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: product.images[0],\n        alt: \"Product\",\n        className: \"responsive-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, product.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, product.price));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/srv/www/latihan/hello-typescript/src/component/product/productList.tsx"],"names":["React","Component","fetchProductList","ProductList","state","page","perPage","totalProducts","productList","componentDidMount","result","resultJSON","json","ok","setState","products","paging","total","err","render","map","product","index","images","title","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,OAAOC,gBAAP,MAA6B,6BAA7B;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAA+D;AAAA;AAAA;AAAA,SAE5EG,KAF4E,GAE9C;AAC5BC,MAAAA,IAAI,EAAE,CADsB;AAE5BC,MAAAA,OAAO,EAAE,CAFmB;AAG5BC,MAAAA,aAAa,EAAE,CAHa;AAI5BC,MAAAA,WAAW,EAAE;AAJe,KAF8C;AAAA;;AAQ5E,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,UAAIC,MAAM,GAAG,MAAMR,gBAAgB,CAAC,KAAKE,KAAL,CAAWC,IAAZ,EAAkB,KAAKD,KAAL,CAAWE,OAA7B,CAAnC;AACA,UAAIK,UAA4B,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAzC;;AAEA,UAAIF,MAAM,CAACG,EAAX,EAAe;AACb,aAAKC,QAAL,CAAc;AACZN,UAAAA,WAAW,EAAEG,UAAU,CAACI,QADZ;AAEZR,UAAAA,aAAa,EAAEI,UAAU,CAACK,MAAX,CAAkBC;AAFrB,SAAd;AAID,OALD,MAKO,CACL;AACD;AACF,KAZD,CAYE,OAAMC,GAAN,EAAW,CACX;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKf,KAAL,CAAWI,WAAX,CAAuBY,GAAvB,CAA2B,CAACC,OAAD,EAAUC,KAAV,KAA4B;AACrD,aACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,MAAR,CAAe,CAAf,CAAV;AAA6B,QAAA,GAAG,EAAC,SAAjC;AAA2C,QAAA,SAAS,EAAC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,OAAO,CAACG,KAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMH,OAAO,CAACI,KAAd,CAHF,CADF;AAOD,KARD,CAFF,CADF,CADF;AAiBD;;AA5C2E","sourcesContent":["import React, { Component } from \"react\"\n\nimport { ProductListStateType, responseJSONType } from \"./productTypes\";\nimport fetchProductList from \"../../api_calls/productList\";\n\nexport default class ProductList extends Component<any, ProductListStateType> {\n\n  state: ProductListStateType = {\n    page: 1,\n    perPage: 4,\n    totalProducts: 0,\n    productList: [],\n  }\n  async componentDidMount() {\n    try {\n      let result = await fetchProductList(this.state.page, this.state.perPage)\n      let resultJSON: responseJSONType = await result.json()\n\n      if (result.ok) {\n        this.setState({ \n          productList: resultJSON.products, \n          totalProducts: resultJSON.paging.total \n        })\n      } else {\n        // Handle your error here\n      }\n    } catch(err) {\n      // Handle your error here\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        {\n          this.state.productList.map((product, index: number) => {\n            return (\n              <div key={index} className=\"col s6\">\n                <img src={product.images[0]} alt=\"Product\" className=\"responsive-img\"/>      \n                <div>{product.title}</div>\n                <div>{product.price}</div>\n              </div>\n            )\n          })\n        }\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}